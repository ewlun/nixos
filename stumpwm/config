;; -*-lisp-*-

(in-package :stumpwm)

(set-module-dir (merge-pathnames ".config/stumpwm/modules/"
		  (user-homedir-pathname)))

(ql:quickload "slynk")

;; change the prefix key to something else
(set-prefix-key (kbd "s-a"))

;; prompt the user for an interactive command. The first arg is an
;; optional initial contents.
(defcommand colon1 (&optional (initial "")) (:rest)
  (let ((cmd (read-one-line (current-screen) ": " :initial-input initial)))
    (when cmd
      (eval-command cmd t))))

(defcommand slynk (port) ((:string "Port number: "))
  (sb-thread:make-thread
   (lambda ()
     (slynk:create-server :port (parse-integer port) :dont-close t))
   :name "slynk-manual"))

(setf *ignore-wm-inc-hints* t)
(setf *mouse-focus-policy* :click)

(ql:quickload "clx-truetype")
(load-module "ttf-fonts")
(setf xft:*font-dirs* (append xft:*font-dirs* (list "/run/current-system/sw/share/X11/fonts")))

;; Tell clx-truetype about the fonts you have installed. You really only need to do this once,
;; but putting it here means you will not forget in the future.
(xft:cache-fonts)

(set-font (make-instance 'xft:font :family "DejaVu Sans Mono" :subfamily "Book" :size 10))

(defun show-battery-charge ()
  (remove #\newline (run-shell-command "sh /home/edwin/show_battery.sh" t)))

(setf *window-format* "%m%20t")

(setf *time-modeline-string* "%a %e %b %k:%M")

(setf *screen-mode-line-format*
      (list
       "[^B^3%g^b] ^4%W"
       "^>"
       ;;"%m"
       '(:eval (format nil "^5| Battery:~D " (show-battery-charge)))
       "^5| %d"
       ))

(setf *mode-line-timeout* 2)
(enable-mode-line (current-screen) (current-head) t)

;; Browse somewhere
(define-key *root-map* (kbd "b") "exec firefox")

(define-key *top-map* (kbd "s-1") "gselect 1")
(define-key *top-map* (kbd "s-2") "gselect 2")
(define-key *top-map* (kbd "s-3") "gselect 3")
(define-key *top-map* (kbd "s-4") "gselect 4")
(define-key *top-map* (kbd "s-5") "gselect 5")
(define-key *top-map* (kbd "s-6") "gselect 6")
(define-key *top-map* (kbd "s-7") "gselect 7")
(define-key *top-map* (kbd "s-8") "gselect 8")
(define-key *top-map* (kbd "s-9") "gselect 9")

;; Clear rules
(clear-window-placement-rules)

